<?php

function webcomic_toolkit_menu() {
    $items = array();

    $items['comic/latest'] = array(
        'page callback' => 'load_page',
        'page arguments' => array('latest'),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
     );

    $items['comic/%/%'] = array(
        'page callback' => 'load_page',
        'page arguments' => array('page', 1, 2),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['comic/first'] = array(
        'page callback' => 'load_page',
        'page arguments' => array('first'),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    return $items;
}

/**
 * Implements hook_theme_registry_alter().
 */
function webcomic_toolkit_theme_registry_alter(&$theme_registry) {
    // Defined path to the current module.
    $module_path = drupal_get_path('module', 'webcomic_toolkit');
    // Find all .tpl.php files in this module's folder recursively.
    $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
    // Iterate through all found template file objects.
    foreach ($template_file_objects as $key => $template_file_object) {
        // If the template has not already been overridden by a theme.
        if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
            // Alter the theme path and template elements.
            $theme_registry[$key]['theme path'] = $module_path;
            $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
            $theme_registry[$key]['type'] = 'module';
        }
    }
}

function load_page($type, $chapter = NULL, $page = NULL) {
    $query = new EntityFieldQuery();
    if($type == 'page') {
        $query->entityCondition('entity_type', 'node')
            ->entityCondition('bundle', 'comic_page')
            ->fieldCondition('field_comic_page_chapter', 'value', $chapter, '=')
            ->fieldCondition('field_comic_page_number', 'value', $page, '=')
            ->fieldOrderBy('field_comic_page_chapter', 'value')
            ->fieldOrderBy('field_comic_page_number', 'value')
            ->range(0,1);
             
    }
    else if($type == 'latest') {
        $query->entityCondition('entity_type', 'node')
            ->entityCondition('bundle', 'comic_page')
            ->fieldOrderBy('field_comic_page_chapter', 'value', 'DESC')
            ->fieldOrderBy('field_comic_page_number', 'value', 'DESC')
            ->range(0,1);
        $result = $query->execute();
    }
    else if($type == 'first') {
        $query->entityCondition('entity_type', 'node')
            ->entityCondition('bundle', 'comic_page')
            ->fieldOrderBy('field_comic_page_chapter', 'value', 'ASC')
            ->fieldOrderBy('field_comic_page_number', 'value', 'ASC')
            ->range(0,1);
        $result = $query->execute();
    }
        $result = $query->execute(); 
        $nid = current(array_keys($result['node']));
        $page_node = node_load($nid);
        $page_view = node_view($page_node);
        $page_view['comments'] = comment_node_page_additions($page_node);
        dpm($page_view);
        $rendered_node = drupal_render($page_view);

        $links = get_comic_nav_links($page_node);

        return $rendered_node;
}

function get_comic_nav_links($node) {
    $page_number = $node->field_comic_page_number['und'][0]['value'];
    $page_chapter = $node->field_comic_page_chapter['und'][0]['value'];

    $comic_index = get_comic_index();
}

function get_comic_index() {
    $query = db_select('field_data_field_comic_page_chapter', 'chapter');
    $query->addField('chapter', 'field_comic_page_chapter_value', 'chapter_number');
    $query->addField('page', 'field_comic_page_number_value', 'page_number');
    $query->addField('chapter', 'entity_id');
    $query->condition('chapter.deleted', 0, '=');
    $query->condition('page.deleted', 0, '=');
    $query->addJoin('INNER', 'field_data_field_comic_page_number', 'page', 'chapter.entity_id = page.entity_id');

    $result = $query->execute();

    $result = $result->fetchAllAssoc('entity_id');
    dpm($result->fetchAllAssoc('entity_id'));
}